using System;
using System.IO;
using System.Linq;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Wordprocessing;
using System.Text.RegularExpressions;

class Program
{
    static void Main(string[] args)
    {
        string filePath = "test.docx"; // Path to your .docx file
        FixFalsePositiveNumbers(filePath);
    }

    static void FixFalsePositiveNumbers(string filePath)
    {
        // Open the Word document
        using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(filePath, true))
        {
            // Get the document's main body content
            Body body = wordDoc.MainDocumentPart.Document.Body;

            if (body == null)
            {
                Console.WriteLine("Document is empty or invalid.");
                return;
            }

            // Regular expression to match False Positive entries
            Regex falsePositiveRegex = new Regex(@"--- False Positive (\d+):", RegexOptions.Compiled);

            // Counter for the new numbering
            int newNumber = 1;

            // Iterate through all paragraphs
            foreach (var paragraph in body.Elements<Paragraph>())
            {
                foreach (var textElement in paragraph.Elements<Run>().SelectMany(run => run.Elements<Text>()))
                {
                    if (falsePositiveRegex.IsMatch(textElement.Text))
                    {
                        // Replace the numbering with the correct sequence
                        textElement.Text = falsePositiveRegex.Replace(textElement.Text, $"--- False Positive {newNumber++}:");
                    }
                }
            }

            // Save the updated document
            wordDoc.MainDocumentPart.Document.Save();
        }

        Console.WriteLine("False Positive numbers corrected successfully.");
    }
}
